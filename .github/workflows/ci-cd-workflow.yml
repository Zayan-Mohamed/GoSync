name: GoSync CI/CD Pipeline

on:
  push:
    branches: [prod]
  pull_request:
    branches: [prod]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # Backend build check
      - name: Install Backend dependencies
        working-directory: ./Backend
        run: npm ci || npm install

      # Frontend build check
      - name: Install Frontend dependencies
        working-directory: ./Frontend
        run: npm ci || npm install

      # Build Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: docker-compose build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      # Set up Docker Buildx for better build performance
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build and push Backend image
      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          context: ./Backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gosync-backend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/gosync-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/gosync-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/gosync-backend:buildcache,mode=max

      # Build and push Frontend image
      - name: Build and push Frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./Frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gosync-frontend:latest,${{ secrets.DOCKER_HUB_USERNAME }}/gosync-frontend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/gosync-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/gosync-frontend:buildcache,mode=max

      # Deploy to production server
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /path/to/production/directory
            docker-compose down
            docker-compose pull
            docker-compose up -d
            docker system prune -af --volumes
